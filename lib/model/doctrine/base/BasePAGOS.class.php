<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PAGOS', 'doctrine');

/**
 * BasePAGOS
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $pa_id
 * @property string $pa_numero_factura
 * @property date $pa_fecha
 * @property string $pa_detalle
 * @property decimal $pa_iva
 * @property decimal $pa_ice
 * @property decimal $pa_comision
 * @property decimal $pa_valor_total
 * @property blob $pa_respaldo
 * @property integer $persona_pe_id
 * @property PERSONA $PERSONA
 * 
 * @method integer getPaId()              Returns the current record's "pa_id" value
 * @method string  getPaNumeroFactura()   Returns the current record's "pa_numero_factura" value
 * @method date    getPaFecha()           Returns the current record's "pa_fecha" value
 * @method string  getPaDetalle()         Returns the current record's "pa_detalle" value
 * @method decimal getPaIva()             Returns the current record's "pa_iva" value
 * @method decimal getPaIce()             Returns the current record's "pa_ice" value
 * @method decimal getPaComision()        Returns the current record's "pa_comision" value
 * @method decimal getPaValorTotal()      Returns the current record's "pa_valor_total" value
 * @method blob    getPaRespaldo()        Returns the current record's "pa_respaldo" value
 * @method integer getPersonaPeId()       Returns the current record's "persona_pe_id" value
 * @method PERSONA getPERSONA()           Returns the current record's "PERSONA" value
 * @method PAGOS   setPaId()              Sets the current record's "pa_id" value
 * @method PAGOS   setPaNumeroFactura()   Sets the current record's "pa_numero_factura" value
 * @method PAGOS   setPaFecha()           Sets the current record's "pa_fecha" value
 * @method PAGOS   setPaDetalle()         Sets the current record's "pa_detalle" value
 * @method PAGOS   setPaIva()             Sets the current record's "pa_iva" value
 * @method PAGOS   setPaIce()             Sets the current record's "pa_ice" value
 * @method PAGOS   setPaComision()        Sets the current record's "pa_comision" value
 * @method PAGOS   setPaValorTotal()      Sets the current record's "pa_valor_total" value
 * @method PAGOS   setPaRespaldo()        Sets the current record's "pa_respaldo" value
 * @method PAGOS   setPersonaPeId()       Sets the current record's "persona_pe_id" value
 * @method PAGOS   setPERSONA()           Sets the current record's "PERSONA" value
 * 
 * @package    dml
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePAGOS extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('PAGOS');
        $this->hasColumn('pa_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('pa_numero_factura', 'string', 17, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 17,
             ));
        $this->hasColumn('pa_fecha', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('pa_detalle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('pa_iva', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('pa_ice', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('pa_comision', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('pa_valor_total', 'decimal', 10, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('pa_respaldo', 'blob', null, array(
             'type' => 'blob',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('persona_pe_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PERSONA', array(
             'local' => 'persona_pe_id',
             'foreign' => 'pe_id'));
    }
}